stages:
    - build
    - publish

default:
    # Only the build stage actually requires a `virt` tagged runner, the rest can use `docker`
    tags:
        - docker

# This job template defines the build for a single OS template
# The rules attached here make sure that templates are only (re)build on changes to their or shared files.
.build_template:
    stage: build
    tags:
        - virt
        - packer
    artifacts:
        paths:
            - build_${TEMPLATE_NAME}/
    script:
        - make build NAME=${TEMPLATE_NAME}
    rules:
        - changes:
            - .gitlab-ci.yml
            - Makefile
            - files/*
            - templates/${TEMPLATE_NAME}.json
            - tpl/*

# Publish a built template by uploading it to an S3 bucket, the objects are prefixed with the name of the branch/tag
.upload_template:
    stage: publish
    image: "ubuntu:20.04"
    only:
        - master
    artifacts:
        paths:
            - build_${TEMPLATE_NAME}/${TEMPLATE_NAME}.json
            - build_${TEMPLATE_NAME}/${TEMPLATE_NAME}.checksum
            - build_${TEMPLATE_NAME}/${TEMPLATE_NAME}.qcow2
    script:
        - apt-get update
        - apt-get -y install s3cmd curl
        - echo "[default]" > .s3cfg
        - echo "access_key = ${OBJECTS_ACCESS_KEY}" >> .s3cfg
        - echo "secret_key = ${OBJECTS_SECRET_KEY}" >> .s3cfg
        - echo "host_bucket = %(bucket)s.${OBJECTS_HOST}" >> .s3cfg
        - echo "host_base = ${OBJECTS_HOST}" >> .s3cfg
        - echo "use_https = False" >> .s3cfg
        - s3cmd --no-ssl --access_key="${OBJECTS_ACCESS_KEY}" --secret_key="${OBJECTS_SECRET_KEY}" --host-bucket="%(bucket)s.${OBJECTS_HOST}" --host="${OBJECTS_HOST}" put -P --no-preserve build_${TEMPLATE_NAME}/${TEMPLATE_NAME}.json s3://${OBJECTS_BUCKET}/templates/${TEMPLATE_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.json
        - s3cmd --no-ssl --access_key="${OBJECTS_ACCESS_KEY}" --secret_key="${OBJECTS_SECRET_KEY}" --host-bucket="%(bucket)s.${OBJECTS_HOST}" --host="${OBJECTS_HOST}" put -P --no-preserve build_${TEMPLATE_NAME}/${TEMPLATE_NAME}.checksum s3://${OBJECTS_BUCKET}/templates/${TEMPLATE_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.checksum
        - s3cmd --no-ssl --access_key="${OBJECTS_ACCESS_KEY}" --secret_key="${OBJECTS_SECRET_KEY}" --host-bucket="%(bucket)s.${OBJECTS_HOST}" --host="${OBJECTS_HOST}" put -P --no-preserve build_${TEMPLATE_NAME}/${TEMPLATE_NAME}.qcow2 s3://${OBJECTS_BUCKET}/templates/${TEMPLATE_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.qcow2
        - sleep 5
        - curl -I http://${OBJECTS_BUCKET}.${OBJECTS_HOST}/templates/${TEMPLATE_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.checksum
        - curl -I http://${OBJECTS_BUCKET}.${OBJECTS_HOST}/templates/${TEMPLATE_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.json
        - curl -I http://${OBJECTS_BUCKET}.${OBJECTS_HOST}/templates/${TEMPLATE_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.qcow2
        - rm -fr build_${TEMPLATE_NAME}/

# AlmaLinux 8
build:almalinux-8:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "almalinux-8"

publish:almalinux-8:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "almalinux-8"

# Centos 7
build:centos-7:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "centos-7"

publish:centos-7:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "centos-7"

# Centos 8
build:centos-8:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "centos-8"

publish:centos-8:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "centos-8"

# CloudLinux 8
build:cloudlinux-8:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "cloudlinux-8"

publish:cloudlinux-8:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "cloudlinux-8"

## Debian 10
build:debian-10:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "debian-10"

publish:debian-10:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "debian-10"

## Ubuntu 18.04
build:ubuntu-18.04:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "ubuntu-18.04"

publish:ubuntu-18.04:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "ubuntu-18.04"

## Ubuntu 20.04
build:ubuntu-20.04:
    extends: .build_template
    variables:
        TEMPLATE_NAME: "ubuntu-20.04"

publish:ubuntu-20.04:
    extends: .upload_template
    variables:
        TEMPLATE_NAME: "ubuntu-20.04"
